#!/bin/bash

# Copyright (c) 2021 Drake Newell <drake.a.newell@tutanota.com>

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

END=50
GIT_USER=
FORKS=~/.cache/vforks
VPKG_PATH=~/void-packages

if [ -e $FORKS ]; then
	if [ $(stat -c '%w' $FORKS | cut -f1 -d' ') != $(date +"%Y-%m-%d") ]; then
		notify-send "Updating repository list..." "This may take a moment"
		for ((i=1;i<=END;i++)); do
			curl -u ${USER}:${GITHUB_TOKEN} https://api.github.com/repos/void-linux/void-packages/forks?page=$i >> $FORKS
		done
		sed -i 's|\(.*\)}.*|\1|' $FORKS
	fi
else
	for ((i=1;i<=END;i++)); do
		curl -u ${USER}:${GITHUB_TOKEN} https://api.github.com/repos/void-linux/void-packages/forks?page=$i >> $FORKS
	done
	sed -i 's|\(.*\)}.*|\1|' $FORKS
fi

REPO=$(grep "full_name" $FORKS | cut -f2 -d':' | sed 's/\"//g; s/\,//g; s/ //g' | dmenu -p "Select repository:" -l 20)
[ -z $REPO ] && exit
ANS1=$(printf "Yes\\nNo" | dmenu -p "Exit script and explore repository in browser?")
[ -z $ANS1 ] && exit
if [ $ANS1 = "Yes" ]; then
	$BROWSER https://github.com/${REPO}
	exit
fi

cd $VPKG_PATH
OWNR=$(echo $REPO | cut -f1 -d'/')
[ -z $OWNR ] && exit
git remote add $OWNR https://github.com/${REPO}.git
BRNCH=$(git ls-remote --heads $OWNR | cut -f2 -d' ' | cut -f3 -d'/' | dmenu -p 'Select branch (if unsure, select "master")' -l 20)
[ -z $BRNCH ] && exit
git fetch $OWNR $BRNCH
PKG=$(git ls-files --with-tree ${OWNR}/${BRNCH} | grep srcpkgs | cut -f2 -d'/' | awk '!x[$0]++' | dmenu -p "Select package:" -l 20)
 [ -z $PKG ] && exit
git cherry-pick -x -m 1 $(git log --pretty=oneline ${OWNR}/${BRNCH} -- srcpkgs/${PKG} | cut -f1 -d' ' | head -1)

if [ $(printf "Yes\\nNo" | dmenu -p "Build ${PKG}?") = "Yes" ]; then
	notify-send "Building ${PKG}..." "This will likely take a while"
	./xbps-src pkg $PKG
	cd
fi
